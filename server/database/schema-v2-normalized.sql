-- CasaNawal V2 Normalized Schema - Optimized
CREATE EXTENSION IF NOT EXISTS "uuid-ossp"; CREATE EXTENSION IF NOT EXISTS "pg_trgm";

-- System Configuration
CREATE TABLE system_settings (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), setting_key VARCHAR(100) UNIQUE NOT NULL, setting_value JSONB NOT NULL, description TEXT, category VARCHAR(50) DEFAULT 'general', is_public BOOLEAN DEFAULT false, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE languages (code CHAR(2) PRIMARY KEY, name VARCHAR(50) NOT NULL, native_name VARCHAR(50) NOT NULL, is_active BOOLEAN DEFAULT true, is_default BOOLEAN DEFAULT false, sort_order INTEGER DEFAULT 0);
CREATE TABLE delivery_zones (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), name VARCHAR(100) NOT NULL, description TEXT, coordinates JSONB, base_fee DECIMAL(10,2) DEFAULT 0.00, min_order_amount DECIMAL(10,2) DEFAULT 0.00, max_delivery_time INTEGER DEFAULT 60, is_active BOOLEAN DEFAULT true, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);

-- User Management
CREATE TABLE roles (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), name VARCHAR(50) UNIQUE NOT NULL, display_name VARCHAR(100) NOT NULL, description TEXT, permissions JSONB NOT NULL DEFAULT '[]', is_system BOOLEAN DEFAULT false, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE admin_users (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), email VARCHAR(255) UNIQUE NOT NULL, password_hash VARCHAR(255) NOT NULL, first_name VARCHAR(100), last_name VARCHAR(100), role_id UUID REFERENCES roles(id) ON DELETE RESTRICT, avatar_url TEXT, is_active BOOLEAN DEFAULT true, last_login_at TIMESTAMP WITH TIME ZONE, password_changed_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, failed_login_attempts INTEGER DEFAULT 0, locked_until TIMESTAMP WITH TIME ZONE, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE customers (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), phone VARCHAR(20) NOT NULL UNIQUE, email VARCHAR(255) UNIQUE, first_name VARCHAR(100), last_name VARCHAR(100), birth_date DATE, gender CHAR(1) CHECK (gender IN ('M', 'F', 'O')), preferred_language CHAR(2) REFERENCES languages(code), is_active BOOLEAN DEFAULT true, marketing_consent BOOLEAN DEFAULT false, email_verified_at TIMESTAMP WITH TIME ZONE, phone_verified_at TIMESTAMP WITH TIME ZONE, total_orders INTEGER DEFAULT 0, total_spent DECIMAL(12,2) DEFAULT 0.00, loyalty_points INTEGER DEFAULT 0, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE customer_addresses (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), customer_id UUID NOT NULL REFERENCES customers(id) ON DELETE CASCADE, delivery_zone_id UUID REFERENCES delivery_zones(id), label VARCHAR(50) DEFAULT 'home', address_line_1 VARCHAR(255) NOT NULL, address_line_2 VARCHAR(255), city VARCHAR(100) NOT NULL, postal_code VARCHAR(20), country VARCHAR(2) DEFAULT 'MA', latitude DECIMAL(10, 8), longitude DECIMAL(11, 8), delivery_instructions TEXT, is_default BOOLEAN DEFAULT false, is_active BOOLEAN DEFAULT true, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);

-- Product Catalog
CREATE TABLE categories (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), slug VARCHAR(100) UNIQUE NOT NULL, parent_id UUID REFERENCES categories(id) ON DELETE SET NULL, icon VARCHAR(50), image_url TEXT, sort_order INTEGER DEFAULT 0, is_active BOOLEAN DEFAULT true, is_featured BOOLEAN DEFAULT false, meta_title VARCHAR(255), meta_description TEXT, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE category_translations (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), category_id UUID NOT NULL REFERENCES categories(id) ON DELETE CASCADE, language_code CHAR(2) NOT NULL REFERENCES languages(code), name VARCHAR(200) NOT NULL, description TEXT, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, UNIQUE(category_id, language_code));
CREATE TABLE suppliers (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), name VARCHAR(200) NOT NULL, code VARCHAR(50) UNIQUE, contact_person VARCHAR(100), email VARCHAR(255), phone VARCHAR(20), address TEXT, tax_number VARCHAR(50), payment_terms INTEGER DEFAULT 30, is_active BOOLEAN DEFAULT true, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE products (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), sku VARCHAR(100) UNIQUE NOT NULL, category_id UUID NOT NULL REFERENCES categories(id) ON DELETE RESTRICT, supplier_id UUID REFERENCES suppliers(id), base_price DECIMAL(10,2) NOT NULL CHECK (base_price >= 0), cost_price DECIMAL(10,2) DEFAULT 0.00, weight_grams INTEGER DEFAULT 0, calories INTEGER DEFAULT 0, prep_time_minutes INTEGER DEFAULT 15 NOT NULL, shelf_life_hours INTEGER DEFAULT 24, storage_temperature VARCHAR(20) DEFAULT 'ambient', is_active BOOLEAN DEFAULT true, is_featured BOOLEAN DEFAULT false, is_vegetarian BOOLEAN DEFAULT false, is_vegan BOOLEAN DEFAULT false, is_gluten_free BOOLEAN DEFAULT false, is_halal BOOLEAN DEFAULT true, is_spicy BOOLEAN DEFAULT false, is_seasonal BOOLEAN DEFAULT false, rating DECIMAL(3,2) DEFAULT 0.00 CHECK (rating >= 0 AND rating <= 5), rating_count INTEGER DEFAULT 0, view_count INTEGER DEFAULT 0, order_count INTEGER DEFAULT 0, sort_order INTEGER DEFAULT 0, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE product_translations (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), product_id UUID NOT NULL REFERENCES products(id) ON DELETE CASCADE, language_code CHAR(2) NOT NULL REFERENCES languages(code), name VARCHAR(200) NOT NULL, description TEXT, short_description VARCHAR(500), ingredients TEXT, nutritional_info JSONB, allergen_info JSONB, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, UNIQUE(product_id, language_code));
CREATE TABLE product_images (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), product_id UUID NOT NULL REFERENCES products(id) ON DELETE CASCADE, image_url TEXT NOT NULL, alt_text VARCHAR(255), sort_order INTEGER DEFAULT 0, is_primary BOOLEAN DEFAULT false, image_type VARCHAR(20) DEFAULT 'gallery', created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE product_variants (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), product_id UUID NOT NULL REFERENCES products(id) ON DELETE CASCADE, name VARCHAR(100) NOT NULL, price_adjustment DECIMAL(10,2) DEFAULT 0.00, weight_adjustment_grams INTEGER DEFAULT 0, sort_order INTEGER DEFAULT 0, is_active BOOLEAN DEFAULT true, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);

-- Inventory Management
CREATE TABLE inventory_locations (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), name VARCHAR(100) NOT NULL, code VARCHAR(20) UNIQUE NOT NULL, address TEXT, is_active BOOLEAN DEFAULT true, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE inventory_items (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), product_id UUID NOT NULL REFERENCES products(id) ON DELETE CASCADE, location_id UUID NOT NULL REFERENCES inventory_locations(id), current_stock INTEGER DEFAULT 0, reserved_stock INTEGER DEFAULT 0, min_stock_level INTEGER DEFAULT 0, max_stock_level INTEGER, reorder_point INTEGER DEFAULT 0, cost_per_unit DECIMAL(10,2) DEFAULT 0.00, last_restocked_at TIMESTAMP WITH TIME ZONE, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, UNIQUE(product_id, location_id));

-- Order Management
CREATE TABLE orders (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), order_number VARCHAR(50) UNIQUE NOT NULL, customer_id UUID REFERENCES customers(id), delivery_address_id UUID REFERENCES customer_addresses(id), delivery_zone_id UUID REFERENCES delivery_zones(id), status VARCHAR(50) NOT NULL DEFAULT 'pending' CHECK (status IN ('pending', 'confirmed', 'preparing', 'ready', 'out_for_delivery', 'delivered', 'cancelled')), order_type VARCHAR(20) DEFAULT 'delivery' CHECK (order_type IN ('delivery', 'pickup')), subtotal DECIMAL(12,2) NOT NULL DEFAULT 0.00, tax_amount DECIMAL(12,2) DEFAULT 0.00, delivery_fee DECIMAL(12,2) DEFAULT 0.00, discount_amount DECIMAL(12,2) DEFAULT 0.00, total_amount DECIMAL(12,2) NOT NULL DEFAULT 0.00, currency CHAR(3) DEFAULT 'MAD', scheduled_delivery_at TIMESTAMP WITH TIME ZONE, estimated_prep_time INTEGER, special_instructions TEXT, customer_notes TEXT, internal_notes TEXT, payment_status VARCHAR(30) DEFAULT 'pending' CHECK (payment_status IN ('pending', 'partial', 'paid', 'refunded', 'failed')), created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE order_items (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), order_id UUID NOT NULL REFERENCES orders(id) ON DELETE CASCADE, product_id UUID REFERENCES products(id), variant_id UUID REFERENCES product_variants(id), quantity INTEGER NOT NULL CHECK (quantity > 0), unit_price DECIMAL(10,2) NOT NULL, total_price DECIMAL(10,2) NOT NULL, product_snapshot JSONB, special_instructions TEXT, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE order_status_history (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), order_id UUID NOT NULL REFERENCES orders(id) ON DELETE CASCADE, status VARCHAR(50) NOT NULL, comment TEXT, changed_by_admin_id UUID REFERENCES admin_users(id), changed_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);

-- Payment Processing
CREATE TABLE payment_methods (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), name VARCHAR(100) NOT NULL, code VARCHAR(50) UNIQUE NOT NULL, description TEXT, processor VARCHAR(50), config JSONB, fees JSONB, is_active BOOLEAN DEFAULT true, sort_order INTEGER DEFAULT 0, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE payments (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), order_id UUID NOT NULL REFERENCES orders(id) ON DELETE CASCADE, payment_method_id UUID NOT NULL REFERENCES payment_methods(id), amount DECIMAL(12,2) NOT NULL CHECK (amount > 0), currency CHAR(3) DEFAULT 'MAD', status VARCHAR(50) NOT NULL DEFAULT 'pending', payment_intent_id VARCHAR(255), transaction_id VARCHAR(255), reference_number VARCHAR(100), processed_at TIMESTAMP WITH TIME ZONE, processor_response JSONB, failure_reason TEXT, proof_image_url TEXT, proof_verified_at TIMESTAMP WITH TIME ZONE, verified_by_admin_id UUID REFERENCES admin_users(id), verification_notes TEXT, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);

-- Promotions & Loyalty
CREATE TABLE promo_codes (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), code VARCHAR(50) UNIQUE NOT NULL, name VARCHAR(200), description TEXT, discount_type VARCHAR(20) NOT NULL CHECK (discount_type IN ('percentage', 'fixed', 'free_delivery')), discount_value DECIMAL(10,2) NOT NULL CHECK (discount_value >= 0), min_order_amount DECIMAL(10,2) DEFAULT 0.00, max_discount_amount DECIMAL(10,2), usage_limit INTEGER, usage_limit_per_customer INTEGER DEFAULT 1, current_usage_count INTEGER DEFAULT 0, starts_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, expires_at TIMESTAMP WITH TIME ZONE, is_active BOOLEAN DEFAULT true, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE loyalty_programs (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), name VARCHAR(100) NOT NULL, description TEXT, points_per_mad DECIMAL(5,2) DEFAULT 1.00, mad_per_point DECIMAL(5,2) DEFAULT 0.01, min_redemption_points INTEGER DEFAULT 100, is_active BOOLEAN DEFAULT true, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE customer_loyalty_transactions (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), customer_id UUID NOT NULL REFERENCES customers(id) ON DELETE CASCADE, order_id UUID REFERENCES orders(id), transaction_type VARCHAR(20) NOT NULL CHECK (transaction_type IN ('earned', 'redeemed', 'expired', 'adjusted')), points INTEGER NOT NULL, description VARCHAR(255), created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);

-- Reviews & Feedback
CREATE TABLE reviews (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), product_id UUID NOT NULL REFERENCES products(id) ON DELETE CASCADE, customer_id UUID REFERENCES customers(id), order_id UUID REFERENCES orders(id), rating INTEGER NOT NULL CHECK (rating >= 1 AND rating <= 5), title VARCHAR(200), comment TEXT, status VARCHAR(20) DEFAULT 'pending' CHECK (status IN ('pending', 'approved', 'rejected')), is_verified_purchase BOOLEAN DEFAULT false, helpful_count INTEGER DEFAULT 0, admin_response TEXT, responded_at TIMESTAMP WITH TIME ZONE, responded_by_admin_id UUID REFERENCES admin_users(id), created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, moderated_at TIMESTAMP WITH TIME ZONE);

-- Analytics & Reporting
CREATE TABLE analytics_events (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), event_type VARCHAR(50) NOT NULL, entity_type VARCHAR(50), entity_id UUID, customer_id UUID REFERENCES customers(id), session_id VARCHAR(100), event_data JSONB, ip_address INET, user_agent TEXT, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE daily_stats (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), stat_date DATE NOT NULL UNIQUE, total_orders INTEGER DEFAULT 0, total_revenue DECIMAL(12,2) DEFAULT 0.00, total_customers INTEGER DEFAULT 0, new_customers INTEGER DEFAULT 0, avg_order_value DECIMAL(10,2) DEFAULT 0.00, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);

-- Notifications & Communications
CREATE TABLE notification_templates (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), name VARCHAR(100) NOT NULL, type VARCHAR(50) NOT NULL, subject VARCHAR(255), body_template TEXT NOT NULL, variables JSONB, is_active BOOLEAN DEFAULT true, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE notifications (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), template_id UUID REFERENCES notification_templates(id), recipient_type VARCHAR(20) NOT NULL CHECK (recipient_type IN ('customer', 'admin')), recipient_id UUID NOT NULL, channel VARCHAR(20) NOT NULL CHECK (channel IN ('email', 'sms', 'push', 'in_app')), subject VARCHAR(255), message TEXT NOT NULL, status VARCHAR(20) DEFAULT 'pending' CHECK (status IN ('pending', 'sent', 'delivered', 'failed')), sent_at TIMESTAMP WITH TIME ZONE, delivered_at TIMESTAMP WITH TIME ZONE, read_at TIMESTAMP WITH TIME ZONE, metadata JSONB, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);

-- Performance Indexes
CREATE INDEX idx_customers_phone ON customers(phone); CREATE INDEX idx_customers_email ON customers(email); CREATE INDEX idx_products_category ON products(category_id); CREATE INDEX idx_products_active ON products(is_active); CREATE INDEX idx_products_featured ON products(is_featured); CREATE INDEX idx_orders_customer ON orders(customer_id); CREATE INDEX idx_orders_status ON orders(status); CREATE INDEX idx_orders_created ON orders(created_at); CREATE INDEX idx_order_items_order ON order_items(order_id); CREATE INDEX idx_order_items_product ON order_items(product_id); CREATE INDEX idx_payments_order ON payments(order_id); CREATE INDEX idx_reviews_product ON reviews(product_id); CREATE INDEX idx_analytics_events_type ON analytics_events(event_type); CREATE INDEX idx_notifications_recipient ON notifications(recipient_type, recipient_id);

-- Auto-update triggers
CREATE OR REPLACE FUNCTION update_updated_at_column() RETURNS TRIGGER AS $$ BEGIN NEW.updated_at = CURRENT_TIMESTAMP; RETURN NEW; END; $$ LANGUAGE plpgsql;
CREATE TRIGGER update_customers_updated_at BEFORE UPDATE ON customers FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_products_updated_at BEFORE UPDATE ON products FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_orders_updated_at BEFORE UPDATE ON orders FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- Order numbering
CREATE OR REPLACE FUNCTION generate_order_number() RETURNS TEXT AS $$ DECLARE order_num TEXT; date_part TEXT; sequence_part TEXT; BEGIN date_part := TO_CHAR(CURRENT_DATE, 'YYYYMMDD'); SELECT LPAD((COALESCE(MAX(CAST(SUBSTRING(order_number FROM 12 FOR 4) AS INTEGER)), 0) + 1)::TEXT, 4, '0') INTO sequence_part FROM orders WHERE order_number LIKE 'NAW-' || date_part || '-%'; order_num := 'NAW-' || date_part || '-' || sequence_part; RETURN order_num; END; $$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION set_order_number() RETURNS TRIGGER AS $$ BEGIN IF NEW.order_number IS NULL OR NEW.order_number = '' THEN NEW.order_number := generate_order_number(); END IF; RETURN NEW; END; $$ LANGUAGE plpgsql;
CREATE TRIGGER set_order_number_trigger BEFORE INSERT ON orders FOR EACH ROW EXECUTE FUNCTION set_order_number();

-- Initial data
INSERT INTO languages (code, name, native_name, is_default) VALUES ('fr', 'French', 'Français', true), ('ar', 'Arabic', 'العربية', false);
INSERT INTO roles (name, display_name, permissions, is_system) VALUES ('super_admin', 'Super Administrator', '["*"]', true), ('admin', 'Administrator', '["orders.*", "products.*", "customers.*"]', true), ('manager', 'Manager', '["orders.read", "products.read", "customers.read"]', true);
